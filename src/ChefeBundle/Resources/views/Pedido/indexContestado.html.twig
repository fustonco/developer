{% extends '::base.html.twig' %}

{% block body %}
    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="card">
                <div class="header">
                    <h2>Lista de Pedidos Contestados</h2>
                </div>
                <div class="body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-hover dataTable js-exportable">
                            <thead>
                                <tr>
                                    <th>Codigo</th>
                                    <th>Data Pedido</th>
                                    <th>Valor</th>
                                    <th>Descricao</th> 
                                    <th>Status</th>
                                    <th>Encaminhado</th>
                                    <th>Operação</th>
                                </tr>
                            </thead>
                            <tbody>
                            {% for entity in entities %}
                                <tr>
                                    <td>{{ entity.codigo }}</td>
                                    <td>{% if entity.dataPedido %}{{ entity.dataPedido | date('d/m/Y H:i:s') }}{% endif %}</td>
                                    <td>R$ {{ entity.valor }}</td>
                                    <td>{{ entity.descricao }}</td>
                                    <td>{{ entity.status }}</td>
                                    <td><span data-toggle="tooltip" data-placement="top" title="" data-original-title="{{entity.funcionario}}">{{ entity.tipo_funcionario }}</span></td>
                                    <td>
                                        <a href="javascript:void(0);" class="btn-ver" data-id="{{ entity.id }}"><i class="material-icons" data-toggle="tooltip" data-placement="top" title="" data-original-title="Ver">search</i></a>
                                        {# &nbsp;<a href="javascript:void(0);" class="btn-contestar" data-id="{{ entity.id }}"><i class="material-icons" data-toggle="tooltip" data-placement="top" title="" data-original-title="Contestar">gavel</i></a> #}
                                        {# &nbsp;<a href="javascript:void(0);" class="btn-confirmar" data-id="{{ entity.id }}"><i class="material-icons" data-toggle="tooltip" data-placement="top" title="" data-original-title="Confirmar">send</i></a> #}
                                        {# {% if entity.id_tipo_funcionario != 3 %}&nbsp;<a href="javascript:void(0);" class="btn-excluir" data-id="{{ entity.id }}"><i class="material-icons" data-toggle="tooltip" data-placement="top" title="" data-original-title="Excluir">delete</i></a>{% endif %} #}
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="largeModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="largeModalLabel">Pedido #<span id="idPedido"></span> <a class="pull-right pointer"><i onclick="window.print()" class="material-icons">print</i></a></h4>
                </div>
                <div class="modal-body">
                    <div class="row clearfix">
                        <div class="col-sm-4">
                            <h6>Data do Pedido</h6>
                            <p id="dataPedido"></p>
                        </div>
                        <div class="col-sm-4">
                            <h6>Status do Pagamento</h6>
                            <p id="statusPagamento"></p>
                        </div>
                        <div class="col-sm-4">
                            <h6>Tipo de Pagamento</h6>
                            <p id="tipoPagamento"></p>
                        </div>
                        <div class="col-sm-4">
                            <h6>Valor do Pagamento</h6>
                            <p id="valorPagamento"></p>
                        </div>
                        <div class="col-sm-4">
                            <h6>Encaminhado</h6>
                            <p id="encaminhadoPedido"></p>
                        </div>
                        <div class="col-sm-12">
                            <h6>Descrição</h6>
                            <p id="descricaoPedido"></p>
                        </div>
                        <div class="col-sm-12">
                            <h6>Mensagem</h6>
                            <p id="mensagemPedido"></p>
                        </div>
                        <div class="col-sm-12"><br></div>
                        <div class="col-sm-12">
                            <h4>Informações de pagamento</h4>
                            <div id="parcelasPedido"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link waves-effect btn-show-historico">Histórico</button>
                    <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">Fechar</button>
                </div>
                <div class="modal-footer show-historico" style="text-align: left; height: 225px; overflow: auto; display: none;">
                </div>
            </div>
        </div>
    </div>
    <button style="display: none;" type="button" class="btn btn-default waves-effect m-r-20 btn-modal" data-toggle="modal" data-target="#largeModal"></button>

    <div class="modal fade" id="contestacaoModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="largeModalLabel">Contestar</h4>
                </div>
                <div class="modal-body">
                    <div class="row clearfix">
                        <div class="col-sm-12">
                            <h6>Mensagem</h6>
                            <textarea rows="5" id="mensagem-text" style="width: 100%; resize: none;"></textarea>
                        </div>
                        <div class="col-sm-12">
                            <h6>Enviar para</h6>
                            <div class="input-field select-para-create"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link waves-effect btn-contestar-confirm">Contestar</button>
                    <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
    <button style="display: none;" type="button" class="btn btn-default waves-effect m-r-20 btn-modal-contestar" data-toggle="modal" data-target="#contestacaoModal"></button>

    <div class="modal fade" id="confirmarModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="largeModalLabel">Contestar</h4>
                </div>
                <div class="modal-body">
                    <div class="row clearfix">
                        <div class="col-sm-12">
                            <h6>Mensagem</h6>
                            <textarea rows="5" id="mensagem-text-financeiro" style="width: 100%; resize: none;"></textarea>
                        </div>
                        <div class="col-sm-12">
                            <h6>Enviar para</h6>
                            <div class="input-field select-para-financeiro-create"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link waves-effect btn-confirmar-confirm">Confirmar</button>
                    <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
    <button style="display: none;" type="button" class="btn btn-default waves-effect m-r-20 btn-modal-confirmar" data-toggle="modal" data-target="#confirmarModal"></button>
{% endblock %}

{% block javascripts %}
<script>

$('[data-toggle="tooltip"]').tooltip({
    container: 'body'
});

function formatDateStamp(timestamp) {
    const date = new Date(timestamp * 1000);
    const hours = date.getUTCHours();
    const minutes = "0" + date.getUTCMinutes();
    const seconds = "0" + date.getUTCSeconds();
    const formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
    const day = (date.getDate() < 10) ? '0'+date.getDate() : date.getDate();
    const month = ((date.getMonth() + 1) < 10) ? ('0'+(date.getMonth() + 1)) : (date.getMonth() + 1);
    const year = date.getFullYear();
    const formattedDate = day + '/' + month + '/' + year;
    return formattedDate + ' - ' + formattedTime;
}

function formatDate(newdate) {
    const date = new Date(newdate);
    const hours = date.getHours();
    const minutes = "0" + date.getMinutes();
    const seconds = "0" + date.getSeconds();
    const formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
    const day = (date.getDate() < 10) ? '0'+date.getDate() : date.getDate();
    const month = ((date.getMonth() + 1) < 10) ? ('0'+(date.getMonth() + 1)) : (date.getMonth() + 1);
    const year = date.getFullYear();
    const formattedDate = day + '/' + month + '/' + year;
    return formattedDate + ' - ' + formattedTime;
}
function formataDinheiro(n) {
    return "R$ " + Number(n).toFixed(2).replace('.', ',').replace(/(\d)(?=(\d{3})+\,)/g, "$1.");
}

$('.btn-show-historico').click(function(e) {
    if($('.show-historico').is(':visible')){
        $('.show-historico').hide();
    } else {
        $('.show-historico').show();
    }
});

let ajaxForm;

$('.btn-confirmar').click(function(e) {
    e.preventDefault();
    let id = $(this).attr('data-id');

    if(!ajaxForm) {
        swal({
            title: "Atenção",
            text: "Deseja abrir confirmar?",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Sim!",
            cancelButtonText: "Cancelar",
            closeOnConfirm: false,
            showLoaderOnConfirm: true,
            allowClickOutside: false
        }, function(isConfirm) {
            if (isConfirm) {
            ajaxForm = $.ajax({
                type: "POST",
                url: '/chefe/pedido/get/masters/',
                data: {
                    id: id,
                },
                dataType: 'json',
                success: function(data) {
                    ajaxForm = null;
                    let str = '';
                    for(let i = 0; i < data.length; i++) {
                        str += '<option value="'+data[i].idFuncionario+'">'+data[i].nomeFuncionario+'</option>';
                    }
                    $('.select-para-financeiro-create').html('');
                    $('.select-para-financeiro-create').append(`
                        <select class="form-control show-tick select-para-financeiro" name="para" id="para" required aria-required="true">
                        <option value="" selected disabled>-- Selecione --</option>
                        `+str+`
                        </select>
                    `);
                    $('.btn-modal-confirmar').trigger('click');
                    swal.close();

                    $('.btn-confirmar-confirm').click(function(e) {
                        e.preventDefault();
                        let para = $('.select-para-financeiro').val();
                        let mensagem = $('#mensagem-text-financeiro').val();
                        if(!ajaxForm) {
                            swal({
                                title: "Confirmação",
                                text: "Deseja realmente confirmar?",
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonText: "Confirmar",
                                cancelButtonText: "Cancelar",
                                closeOnConfirm: false,
                                allowClickOutside: false,
                                animation: "slide-from-top",
                                inputPlaceholder: "Escreva a mensagem aqui",
                                showLoaderOnConfirm: true
                            }, function (inputValue) {
                                if(inputValue) {
                                    ajaxForm = $.ajax({
                                        type: "POST",
                                        url: '/chefe/pedido/confirmar/',
                                        data: {
                                            id: id,
                                            para: para,
                                            mensagem: mensagem
                                        },
                                        dataType: 'json',
                                        success: function(data) {
                                            ajaxForm = null;
                                            console.log('success', data);
                                            swal({
                                                title: "Sucesso!",
                                                text: data.description,
                                                type: "success",
                                                allowClickOutside: false,
                                                allowEscapeKey: false
                                            }, function(){
                                                window.location = '';
                                            });
                                        },
                                        error: function(data) {
                                            ajaxForm = null;
                                            console.error('erro', data);
                                            if(data.status == 404){
                                                swal({
                                                    title: "Erro",
                                                    text: 'Entre em contato com o suporte.',
                                                    type: "error",
                                                    allowClickOutside: false,
                                                    allowEscapeKey: false
                                                });
                                            } else {
                                                swal({
                                                    title: "Erro",
                                                    text: data.responseJSON.description,
                                                    type: "warning",
                                                    allowClickOutside: false,
                                                    allowEscapeKey: false
                                                });
                                            }
                                        }
                                    });
                                }
                            });
                        }
                    });

                },
                error: function(data) {
                    ajaxForm = null;
                    console.error('erroAffecteds', data);
                }
            });
            }
        });
    }
});

$('.btn-contestar').click(function(e) {
    e.preventDefault();
    let id = $(this).attr('data-id');

    if(!ajaxForm) {
        swal({
            title: "Atenção",
            text: "Deseja abrir contestar?",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Sim!",
            cancelButtonText: "Cancelar",
            closeOnConfirm: false,
            showLoaderOnConfirm: true,
            allowClickOutside: false
        }, function(isConfirm) {
            if (isConfirm) {
            ajaxForm = $.ajax({
                type: "POST",
                url: '/chefe/pedido/get/affecteds/',
                data: {
                    id: id,
                },
                dataType: 'json',
                success: function(data) {
                    ajaxForm = null;
                    let str = '';
                    for(let i = 0; i < data.length; i++) {
                        str += '<option value="'+data[i].idFuncionario+'">'+data[i].nomeFuncionario+'</option>';
                    }
                    $('.select-para-create').html('');
                    $('.select-para-create').append(`
                        <select class="form-control show-tick select-para" name="para" id="para" required aria-required="true">
                        <option value="" selected disabled>-- Selecione --</option>
                        `+str+`
                        </select>
                    `);
                    $('.btn-modal-contestar').trigger('click');
                    swal.close();

                    $('.btn-contestar-confirm').click(function(e) {
                        e.preventDefault();
                        let para = $('.select-para').val();
                        let mensagem = $('#mensagem-text').val();
                        if(!ajaxForm) {
                            swal({
                                title: "Contestação",
                                text: "Deseja realmente contestar?",
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonText: "Constestar",
                                cancelButtonText: "Cancelar",
                                closeOnConfirm: false,
                                allowClickOutside: false,
                                animation: "slide-from-top",
                                inputPlaceholder: "Escreva o motivo aqui",
                                showLoaderOnConfirm: true
                            }, function (inputValue) {
                                if(inputValue) {
                                    ajaxForm = $.ajax({
                                        type: "POST",
                                        url: '/chefe/pedido/contestar/',
                                        data: {
                                            id: id,
                                            para: para,
                                            mensagem: mensagem
                                        },
                                        dataType: 'json',
                                        success: function(data) {
                                            ajaxForm = null;
                                            console.log('success', data);
                                            swal({
                                                title: "Sucesso!",
                                                text: data.description,
                                                type: "success",
                                                allowClickOutside: false,
                                                allowEscapeKey: false
                                            }, function(){
                                                window.location = '';
                                            });
                                        },
                                        error: function(data) {
                                            ajaxForm = null;
                                            console.error('erro', data);
                                            if(data.status == 404){
                                                swal({
                                                    title: "Erro",
                                                    text: 'Entre em contato com o suporte.',
                                                    type: "error",
                                                    allowClickOutside: false,
                                                    allowEscapeKey: false
                                                });
                                            } else {
                                                swal({
                                                    title: "Erro",
                                                    text: data.responseJSON.description,
                                                    type: "warning",
                                                    allowClickOutside: false,
                                                    allowEscapeKey: false
                                                });
                                            }
                                        }
                                    });
                                }
                            });
                        }
                    });

                },
                error: function(data) {
                    ajaxForm = null;
                    console.error('erroAffecteds', data);
                }
            });
            }
        });
    }
});

$('.btn-ver').click(function(e) {
    e.preventDefault();
    let id = $(this).attr('data-id');
    if(!ajaxForm) {
        swal({
            title: "Atenção",
            text: "Deseja realmente ver?",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Sim!",
            cancelButtonText: "Cancelar",
            closeOnConfirm: false,
            showLoaderOnConfirm: true,
            allowClickOutside: false
        }, function(isConfirm) {
            if (isConfirm) {
                ajaxForm = $.ajax({
                    type: "POST",
                    url: '/chefe/pedido/ver/',
                    data: {
                        id: id
                    },
                    dataType: 'json',
                    success: function(data) {
                        ajaxForm = null;
                        historico = data.historico;
                        pagamentos = data.pagamentos;
                        data = data.pedido[0];
                        console.log('success', data);
                        console.log('success', historico);
                        swal.close();
                        $('#idPedido').html(data.id);
                        $('#dataPedido').html(formatDate(data.data_pedido));
                        $('#statusPagamento').html(data.status);
                        let fornecedor = '';
                        if(!data.fornecedor) {fornecedor = '';} else {fornecedor = data.fornecedor;}
                        $('#tipoPagamento').html('<span data-toggle="tooltip" data-placement="top" title="" data-original-title="'+fornecedor+'">'+data.tipo+'</span>');
                        $('#valorPagamento').html("R$ "+data.valor);
                        $('#encaminhadoPedido').html('<span data-toggle="tooltip" data-placement="top" title="" data-original-title="'+data.para+'">'+data.tipo_para+'</span>');
                        $('#descricaoPedido').html(data.descricao);

                        $('#mensagemPedido').html(data.mensagem ? data.mensagem : '-');

                        $("#parcelasPedido").html("");

                        let pagamentosHTML = "";
                        for(let i = 0; i < pagamentos.length; i = i + 1){
                            pagamentosHTML += `<div class="pagamento row">
                                <div class="col-md-6"><b>Tipo:</b> ` + pagamentos[i].tipo + `</div>
                                <div class="col-md-6"><b>Valor:</b> R$ ` + pagamentos[i].valor + `</div>
                                <div class="col-md-6"><b>Num parcelas:</b> ` + pagamentos[i].parcelas_total + `x</div>
                                <div class="col-md-6"><b>Parcelas pagas:</b> ` + pagamentos[i].parcelas_pagas + `x</div>`;

                            switch(pagamentos[i].tipo_id){
                                case '2':
                                    pagamentosHTML += `<div class="col-sm-12"><br></div>
                                        <div class="col-md-12"><b>Detalhes do cartão</b></div>
                                        <div class="col-sm-12"><br></div>
                                        <div class="col-md-6"><b>Título:</b> ` + pagamentos[i].titulo + `</div>
                                        <div class="col-md-6"><b>Número:</b> ` + pagamentos[i].numero + `</div>
                                        <div class="col-md-6"><b>Vencimento:</b> ` + pagamentos[i].vencimento + `</div>
                                        <div class="col-md-6"><b>Melhor data:</b> ` + pagamentos[i].melhor_data + `</div>
                                        <div class="col-md-6"><b>CVC:</b> ` + pagamentos[i].cvc + `</div>`;
                                break;
                                case '6':
                                    pagamentosHTML += `<div class="col-sm-12"><br></div>
                                    <div class="col-md-12"><b>Detalhes da conta</b></div>
                                    <div class="col-sm-12"><br></div>
                                    <div class="col-md-6"><b>Banco:</b> ` + pagamentos[i].banco + `</div>
                                    <div class="col-md-6"><b>Agência:</b> ` + pagamentos[i].agencia + `</div>
                                    <div class="col-md-6"><b>Conta:</b> ` + pagamentos[i].conta + `</div>
                                    <div class="col-md-6"><b>Tipo:</b> ` + pagamentos[i].conta_tipo + `</div>
                                    <div class="col-md-6"><b>CPF:</b> ` + (pagamentos[i].cpf ? pagamentos[i].cpf : `-`) + `</div>
                                    <div class="col-md-6"><b>CNPJ:</b> ` + (pagamentos[i].cnpj ? pagamentos[i].cnpj : `-`) + `</div>`;
                            }

                            pagamentosHTML += `</div>`;

                            pagamentosHTML += `<div class="table-responsive">
                                                    <br><br>
                                                    <table class="table table-bordered table-striped table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th>Num Parcela</th>
                                                                <th>Valor</th>
                                                                <th>Valor pago</th>
                                                                <th>Valor pendente</th>
                                                                <th>Acréscimo</th>
                                                                <th>Desconto</th>
                                                                <th>Vencimento</th>
                                                                <th>Status</th>
                                                            </tr>
                                                        </thead>`;

                            for(let j = 0; j < pagamentos[i].parcelas.length; j = j + 1){
                                let parcela = pagamentos[i].parcelas[j];

                                pagamentosHTML += `<tr>
                                                        <td>` + parcela.num_parcela + `</td>
                                                        <td>R$ ` + parcela.valor + `</td>
                                                        <td>` + (parcela.valor_pago ? `R$ ` + parcela.valor_pago : `-`) + `</td>
                                                        <td>` + (parcela.valor_pendente ? `R$ ` + parcela.valor_pendente : `-`) + `</td>
                                                        <td>` + (parcela.valor_acrecimo ? `R$ ` + parcela.valor_acrecimo : `-`) + `</td>
                                                        <td>` + (parcela.valor_desconto ? `R$ ` + parcela.valor_desconto : `-`) + `</td>
                                                        <td>` + parcela.data_vencimento + `</td>
                                                        <td>` + parcela.status + `</td>
                                                    </tr>`;
                            }

                            pagamentosHTML += `</table></div>`;
                        }

                        $("#parcelasPedido").html(pagamentosHTML);

                        $('[data-toggle="tooltip"]').tooltip({container: 'body'});
                        $('.show-historico').html('');
                        for(let i = 0; i < historico.length; i++) {
                            let mensagem = '';
                            let oddClass = '';
                            if ( historico[i].idmensagem ) { mensagem = historico[i].idmensagem.mensagem; }
                            if ( i % 2 === 0 ) { oddClass = 'oddClass' }
                            $('.show-historico').append(`
                                <div class="row clearfix">
                                    <div class="col-sm-12 `+oddClass+`">
                                        <h6 style="text-align: right;">`+formatDateStamp(historico[i].dataPassagem.timestamp)+`</h6>
                                        <h6>De: `+historico[i].idde.nome+` - Para: `+historico[i].idpara.nome+`</h6>
                                        <h6>`+historico[i].tipoHistorico.nome+`</h6>
                                        <p>`+mensagem+`</p>
                                    </div>
                                </div>
                            `);
                        }
                        $('.btn-modal').trigger('click');
                        // MODAL
                    },
                    error: function(data) {
                        ajaxForm = null;
                        console.error('erro', data);
                        if(data.status == 404){
                            swal({
                                title: "Erro",
                                text: 'Entre em contato com o suporte.',
                                type: "error",
                                allowClickOutside: false,
                                allowEscapeKey: false
                            });
                        } else {
                            swal({
                                title: "Erro",
                                text: data.responseJSON.description,
                                type: "warning",
                                allowClickOutside: false,
                                allowEscapeKey: false
                            });
                        }
                    }
                });
            }
        });
    }
});
$('.btn-excluir').click(function(e) {
    e.preventDefault();
    let id = $(this).attr('data-id');
    if(!ajaxForm) {
        swal({
            title: "Atenção",
            text: "Deseja realmente deletar?",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Sim!",
            cancelButtonText: "Cancelar",
            closeOnConfirm: false,
            showLoaderOnConfirm: true,
            allowClickOutside: false
        }, function(isConfirm) {
            if (isConfirm) {
                ajaxForm = $.ajax({
                    type: "POST",
                    url: '/chefe/pedido/excluir/',
                    data: {
                        id: id
                    },
                    dataType: 'json',
                    success: function(data) {
                        ajaxForm = null;
                        console.log('success', data);
                        swal({
                            title: "Sucesso",
                            text: data.description,
                            type: "success",
                            allowClickOutside: false,
                            allowEscapeKey: false
                        }, function(){
                            window.location = '';
                        });
                    },
                    error: function(data) {
                        ajaxForm = null;
                        console.error('erro', data);
                        if(data.status == 404){
                            swal({
                                title: "Erro",
                                text: 'Entre em contato com o suporte.',
                                type: "error",
                                allowClickOutside: false,
                                allowEscapeKey: false
                            });
                        } else {
                            swal({
                                title: "Erro",
                                text: data.responseJSON.description,
                                type: "warning",
                                allowClickOutside: false,
                                allowEscapeKey: false
                            });
                        }
                    }
                });
            }
        });
    }
});
</script>
{% endblock %}