{% extends 'base.html.twig' %}

{% block body %}
    <div class="block-header">
        <h2>PAGAMENTOS EFETUADOS</h2>
    </div>

     <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="card">
                <div class="header">
                    <h2>
                        Lista de Pagamentos
                    </h2>
                </div>
                <div class="body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-hover dataTable js-exportable">
                            <thead>
                                <tr>
                                    <th>Código</th>
                                    <th>Valor</th>
                                    <th>Data pagamento</th>
                                    <th>Pagamento</th>
                                    <th>Detalhes</th>
                                </tr>
                            </thead>
                            <tbody>
                            
                                {% for p in pagamentos %}
                                    <tr>
                                        <td>{{p.codigo}}</td>
                                        <td>R$ {{p.valor}}</td>
                                        <td>{{p.data_pagamento | date("d/m/Y")}}</td>
                                        <td>{{p.tipo_pagamento}}</td>
                                        <td>
                                            <a class="btn-ver pointer" data-id="{{ p.id }}"><i class="material-icons" data-toggle="tooltip" data-placement="top" title="" data-original-title="Ver">search</i></a>
                                        </td>
                                    </tr>
                                {% endfor %}
                            
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="largeModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="largeModalLabel">Detalhes do pedido <span id="idPedido"></span> <a class="pull-right pointer"><i onclick="window.print()" class="material-icons">print</i></a></h4>
                </div>
                <div class="modal-body">
                    <div class="row clearfix">
                        <div class="col-sm-12"><br></div>
                        <div class="col-sm-4"><b>Código:</b> <span id="codPagamento"></span></div>
                        <div class="col-sm-4"><b>Tipo de Pag:</b> <span id="tipoPagamento"></span></div>
                        <div class="col-sm-4"><b>Valor:</b> <span id="valorPagamento"></span></div>
                        <div class="col-sm-12"><br></div>
                        <div class="col-sm-4"><b>Fornecedor:</b> <span id="fornecedorPedido"></span></div>
                        <div class="col-sm-4"></div>
                        <div class="col-sm-4"><b>Data do Pedido:</b> <span id="dataPedido"></span></div>
                        <div class="col-sm-12"><br></div>
                        <div class="col-sm-12">
                            <h4>Descrição</h4>
                            <span id="descricaoPedido"></span>
                        </div>
                        <div class="col-sm-12"><br></div>
                        <div class="col-sm-12">
                            <h4>Informações de pagamento</h4>
                            <div id="parcelasPedido"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">Fechar</button>
                </div>
                <div class="modal-footer show-historico" style="text-align: left; height: 225px; overflow: auto; display: none;">
                </div>
            </div>
        </div>
    </div>
    <button style="display: none;" type="button" class="btn btn-default waves-effect m-r-20 btn-modal" data-toggle="modal" data-target="#largeModal"></button>
{% endblock %}

{% block javascripts %}
    <style>
        .pointer{
            cursor: pointer;
        }
    </style>

    <script>
        let ajaxForm;
        
        function formatDateStamp(timestamp) {
            const date = new Date(timestamp * 1000);
            const hours = date.getUTCHours();
            const minutes = "0" + date.getUTCMinutes();
            const seconds = "0" + date.getUTCSeconds();
            const formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
            const day = (date.getDate() < 10) ? '0'+date.getDate() : date.getDate();
            const month = ((date.getMonth() + 1) < 10) ? ('0'+(date.getMonth() + 1)) : (date.getMonth() + 1);
            const year = date.getFullYear();
            const formattedDate = day + '/' + month + '/' + year;
            return formattedDate + ' - ' + formattedTime;
        }

        function formatDate(newdate) {
            const date = new Date(newdate);
            const hours = date.getHours();
            const minutes = "0" + date.getMinutes();
            const seconds = "0" + date.getSeconds();
            const formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
            const day = (date.getDate() < 10) ? '0'+date.getDate() : date.getDate();
            const month = ((date.getMonth() + 1) < 10) ? ('0'+(date.getMonth() + 1)) : (date.getMonth() + 1);
            const year = date.getFullYear();
            const formattedDate = day + '/' + month + '/' + year;
            return formattedDate + ' - ' + formattedTime;
        }

        $('[data-toggle="tooltip"]').tooltip({
            container: 'body'
        });

        $('.btn-ver').click(function(e) {
            e.preventDefault();
            let id = $(this).attr('data-id');
            if(!ajaxForm) {
                swal({
                    title: "Atenção",
                    text: "Deseja realmente ver?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Sim!",
                    cancelButtonText: "Cancelar",
                    closeOnConfirm: false,
                    showLoaderOnConfirm: true,
                    allowClickOutside: false
                }, function(isConfirm) {
                    if (isConfirm) {
                        ajaxForm = $.ajax({
                            type: "POST",
                            url: '/financeiro/ver/',
                            data: {
                                id: id
                            },
                            dataType: 'json',
                            success: function(data) {
                                ajaxForm = null;
                                pagamentos = data.pagamentos;
                                data = data.pedido[0];
                                swal.close();

                                let fornecedor = '';
                                if(!data.fornecedor) {fornecedor = '';} else {fornecedor = data.fornecedor;}

                                $('#codPagamento').html(data.codigo);
                                $('#tipoPagamento').html('<span data-toggle="tooltip" data-placement="top" title="" data-original-title="'+fornecedor+'">'+data.tipo+'</span>');
                                $('#dataPedido').html(formatDate(data.data_pedido));
                                $('#fornecedorPedido').html(fornecedor ? fornecedor : "Fornecedor indefinido");
                                $('#valorPagamento').html('R$ ' + data.valor);
                                $('#descricaoPedido').html(data.descricao);
                                $('[data-toggle="tooltip"]').tooltip({container: 'body'});

                                $("#parcelasPedido").html("");

                                let pagamentosHTML = "";
                                for(let i = 0; i < pagamentos.length; i = i + 1){
                                    pagamentosHTML += `<div class="pagamento row">
                                        <div class="col-md-6"><b>Tipo:</b> ` + pagamentos[i].tipo + `</div>
                                        <div class="col-md-6"><b>Valor:</b> R$ ` + pagamentos[i].valor + `</div>
                                        <div class="col-md-6"><b>Num parcelas:</b> ` + pagamentos[i].parcelas_total + `x</div>
                                        <div class="col-md-6"><b>Parcelas pagas:</b> ` + pagamentos[i].parcelas_pagas + `x</div>
                                    </div>`;

                                    pagamentosHTML += `<div class="table-responsive">
                                                            <br><br>
                                                            <table class="table table-bordered table-striped table-hover">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Num Parcela</th>
                                                                        <th>Valor</th>
                                                                        <th>Valor pago</th>
                                                                        <th>Valor pendente</th>
                                                                        <th>Acréscimo</th>
                                                                        <th>Desconto</th>
                                                                        <th>Vencimento</th>
                                                                        <th>Status</th>
                                                                    </tr>
                                                                </thead>`;

                                    for(let j = 0; j < pagamentos[i].parcelas.length; j = j + 1){
                                        let parcela = pagamentos[i].parcelas[j];

                                        pagamentosHTML += `<tr>
                                                                <td>` + parcela.num_parcela + `</td>
                                                                <td>R$ ` + parcela.valor + `</td>
                                                                <td>` + (parcela.valor_pago ? `R$ ` + parcela.valor_pago : `-`) + `</td>
                                                                <td>` + (parcela.valor_pendente ? `R$ ` + parcela.valor_pendente : `-`) + `</td>
                                                                <td>` + (parcela.valor_acrecimo ? `R$ ` + parcela.valor_acrecimo : `-`) + `</td>
                                                                <td>` + (parcela.valor_desconto ? `R$ ` + parcela.valor_desconto : `-`) + `</td>
                                                                <td>` + parcela.data_vencimento + `</td>
                                                                <td>` + parcela.status + `</td>
                                                            </tr>`;
                                    }

                                    pagamentosHTML += `</table></div>`;
                                }

                                $("#parcelasPedido").html(pagamentosHTML);

                                $('.btn-modal').trigger('click');
                                // MODAL
                            },
                            error: function(data) {
                                ajaxForm = null;
                                console.error('erro', data);
                                if(data.status == 404){
                                    swal({
                                        title: "Erro",
                                        text: 'Entre em contato com o suporte.',
                                        type: "error",
                                        allowClickOutside: false,
                                        allowEscapeKey: false
                                    });
                                } else {
                                    swal({
                                        title: "Erro",
                                        text: data.responseJSON.description,
                                        type: "warning",
                                        allowClickOutside: false,
                                        allowEscapeKey: false
                                    });
                                }
                            }
                        });
                    }
                });
            }
        });
    </script>
{% endblock %}